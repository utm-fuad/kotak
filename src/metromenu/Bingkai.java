/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package metromenu;

import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import validasi.komponen.InfiniteProgressPanel;

/**
 *
 * @author asus
 */
public class Bingkai extends JFrame {
    private InfiniteProgressPanel glassPane;
    private String nama, password;
    private SplashCologne splash;
    private LoginBox login;
    private HomePage home;
    private koneksi.KoneksiOracleThinClient koneksiDB;
    private String [] dataUserPassword;
    
    //ditambahkan pada sabtu, 22 des 2012@krembangan 22.52
    private String kodeperguruantinggi;
    private String namarole;
    private String PT;

    /**
     * Creates new form PintuGerbang
     */
    public Bingkai() {        
        super.setUndecorated(true); //tanpa title bar
        super.setExtendedState(this.MAXIMIZED_BOTH); //resolusi maksimal dari display        
        super.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); //disable Alt + F4
        super.setAlwaysOnTop(true); //disable Alt+Tab        
        
        koneksiDB = new koneksi.KoneksiOracleThinClient();
        initComponents();        
                
        splash = new SplashCologne(this);         
        panelBesar.add(splash, BorderLayout.CENTER);
        try {
            String hasil = koneksiDB.dapatkanStatusKoneksi();
            if(hasil=="Terkoneksi dengan basis data"){
                
            }
            else{
                JOptionPane.showMessageDialog(rootPane, hasil);
                setVisible(false);
               
            }
        } catch (SQLException ex) {
            Logger.getLogger(Bingkai.class.getName()).log(Level.SEVERE, null, ex);
            
        }            
        /*
        login = new LoginBox();
        panelBesar.add(login,BorderLayout.CENTER);
        */
        
        //panelBerikutnya("login");
        
        setLocationRelativeTo(null);
        setVisible(true);        
        
        System.out.println("instansiasi glass pane");
        glassPane = new InfiniteProgressPanel();
        this.setGlassPane(glassPane);
        glassPane.stop();
    }
    
    public void jalankanGlassPanenya() {
        System.out.println("menjalankan glass pane");
        glassPane.start();
    }
    
    public void hentikanGlassPanenya() {
        System.out.println("mengentikan glass pane");     
        glassPane.stop();
    }
    
    public void simpanKodePT(String kodept) {
        kodeperguruantinggi = kodept;
    }
    
    public void simpanNamaRole(String _namarole) {
        namarole = _namarole;
    }
    
    public void panelBerikutnya(Object panelBerikutnya) throws SQLException {        
        if (panelBerikutnya.toString().equals("login")) {
            panelBesar.remove(splash);            
            login = new LoginBox(this);            
            panelBesar.add(login, BorderLayout.CENTER);        
            this.pack();
            login.aturFocus();
        }
        if (panelBerikutnya.toString().equals("home")) {
            dataUserPassword = login.dapatkanUserPassword();
            panelBesar.remove(login);            
            home = new HomePage(this);                        
            home.simpanKodePT(kodeperguruantinggi); //ditambahkan sabtu, 22 des 2012 @krembangan 22.53
            home.simpanNamaRole(namarole);
            home.tampilkanDataUserDanRole();
            panelBesar.add(home, BorderLayout.CENTER);  
            
            
            
            this.pack();
        }
    }
    
    public String [] dapatkanUserPassword() {
        return dataUserPassword;
    }
    
    public String dapatkanUser() {
        return dataUserPassword[0];
    }
     public String dapatkanPT() {
        return kodeperguruantinggi;
    }
    
    public koneksi.KoneksiOracleThinClient dapatkanKoneksiDB() {
        if (koneksiDB != null) {
            System.out.println("koneksiDB berhasil dibuat instantnya");
            return koneksiDB;
        }
        return null;
    }
    
    /*
    public void tampilkanPanelAtribut(JPanel _panel) {
        this.panel = _panel;
        Component [] komponens = panelAtribut.getComponents();
        for (Component komponen: komponens) {
            panelAtribut.remove(komponen);
        }
        panelAtribut.add(panel);        
    }
    * */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        panelBesar = new javax.swing.JPanel();

        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(0, 10));

        jDesktopPane1.setPreferredSize(new java.awt.Dimension(1366, 768));

        panelBesar.setOpaque(false);
        panelBesar.setPreferredSize(new java.awt.Dimension(1366, 768));
        panelBesar.setLayout(new java.awt.BorderLayout());
        panelBesar.setBounds(0, 0, 1366, 768);
        jDesktopPane1.add(panelBesar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jDesktopPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:        
        int kodeTombol = evt.getKeyCode();         
        if (//kodeTombol == KeyEvent.VK_WINDOWS ||
                (kodeTombol == KeyEvent.VK_D
                   //&& kodeTombol == KeyEvent.VK_DELETE
                )
           ) {
            //JOptionPane.showMessageDialog(null, "ctrl-alt-del ditekan"); 
            System.out.println("ctrl-alt ditekan");
            prioritasTertinggi();
        }
    }//GEN-LAST:event_formKeyPressed

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here: mencegah Windows + D, show desktop
        prioritasTertinggi();
    }//GEN-LAST:event_formWindowIconified

    private void prioritasTertinggi() {
        this.toFront();
        this.repaint();
        this.setExtendedState(this.MAXIMIZED_BOTH);
        this.setAlwaysOnTop(true);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.requestFocus();
    }
    
    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        prioritasTertinggi();
    }//GEN-LAST:event_formWindowLostFocus

    public static void main(String [] args) {        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bingkai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bingkai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bingkai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bingkai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            Bingkai coba;
            public void run() {
                coba = new Bingkai();        
                coba.toFront();
                coba.repaint();
            }
        });
        
        /*
        PintuGerbang2 coba = new PintuGerbang2();
        coba.setVisible(true);
        * */
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel panelBesar;
    // End of variables declaration//GEN-END:variables
}
